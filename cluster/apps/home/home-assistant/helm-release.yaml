---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  dependsOn:
    - name: emqx
      namespace: home
    - name: zigbee2mqtt
      namespace: home
  values:
    image:
      repository: homeassistant/home-assistant
      tag: '2023.3'
    env:
      TZ: "America/Chicago"
    node-selector: omega
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-pvc
        mountPath: /config
        accessMode: "ReadWriteOnce"
        size: 30Gi
    service:
      main:
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx-external"
          hajimari.io/enable: "true"
          hajimari.io/appName: "Home Assistant"
          hajimari.io/icon: "home-assistant"
          authentik.sparks.codes/enabled: "true"
        hosts:
          - host: home.sparks.codes
            paths:
              - path: "/"
                pathType: "Prefix"
        tls:
          - hosts:
              - home.sparks.codes
            secretName: acme-crt-secret-sparks-codes
    dnsConfig:
      options:
        - name: ndots
          value: "1"
    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet
    addons:
      # -- Enable and configure codeserver for the chart.
      #    This allows for easy access to configuration.yaml
      # @default -- See values.yaml
      codeserver:
        enabled: true
        args:
          - --auth
          - none
          - --user-data-dir
          - /data/config/.vscode
        volumeMounts:
          - name: config
            mountPath: /data/config
        service:
          # -- Enable a service for the code-server add-on.
          enabled: true
          type: ClusterIP
          # Specify the default port information
          ports:
            codeserver:
              port: 12321
              enabled: true
              protocol: TCP
              targetPort: 12321
        ingress:
          enabled: true
          ingressClassName: nginx-internal
          annotations:
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/auth-secret: codeserver-auth-secret
            nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
          hosts:
            - host: codeserver-home.sparks.codes
              paths:
                - path: /
                  pathType: "Prefix"
          tls:
            - secretName: acme-crt-secret-sparks-codes
              hosts:
                - codeserver-home.sparks.codes

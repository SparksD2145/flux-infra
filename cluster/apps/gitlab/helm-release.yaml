---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gitlab
  namespace: gitlab
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://charts.gitlab.io
      chart: gitlab
      version: 6.9.2
      sourceRef:
        kind: HelmRepository
        name: gitlab-charts
        namespace: flux-system
      interval: 15m
  values:
    global:
      hosts:
        domain: imake.software
      ingress:
        configureCertmanager: false
        class: nginx-external
        tls:
          enabled: true
          secretName: acme-crt-secret-imake-software
      initialRootPassword:
        secret: gitlab-initial-root-password
        key: password
      time_zone: America/Chicago
      email:
        from: "no-reply@gitlab.imake.software"
        display_name: GitLab
        reply_to: ""
        subject_suffix: ""
        smime:
          enabled: false
          secretName: ""
          keyName: "tls.key"
          certName: "tls.crt"
      minio:
        enabled: true
    gitlab:
      gitaly:
        persistence:
          storageClass: ceph-filesystem
          size: 350Gi
    postgresql:
      persistence:
        storageClass: ceph-block
        size: 20Gi
    minio:
      persistence:
        storageClass: ceph-block
        size: 40Gi
    redis:
      master:
        persistence:
          storageClass: ceph-block
          size: 15Gi
    certmanager:
      installCRDs: false
      install: false
      rbac:
        create: false
    nginx-ingress:
      enabled: false
    gitlab-runner:
      runners:
        privileged: true
        config: |
          [[runners]]
            [runners.docker]
              tls_verify = false
              image = "docker:stable"
              privileged = true
              disable_cache = false
              volumes = ["/certs/client", "/cache"]
            [runners.kubernetes]
              image = "ubuntu:latest"
              privileged = true
            [[runners.kubernetes.volumes.empty_dir]]
              name = "docker-certs"
              mount_path = "/certs/client"
              medium = "Memory"
